@page "/chess"
@using ChessMate.Models
@using ChessMate.Services
@using ChessMate.Utilities
@inject IGameEngine GameEngine

<h3>Chess Game</h3>

<div class="chess-container">
    <div class="chess-board">
        <table class="chessboard">
            <thead>
                <tr>
                    <th></th>
                    @for (char col = 'a'; col <= 'h'; col++)
                    {
                        <th>@col</th>
                    }
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @for (int row = 0; row < 8; row++)
                {
                    <tr>
                        <th>@(8 - row)</th>
                        @for (int col = 0; col < 8; col++)
                        {
                            var position = new Position(row, col);
                            var piece = GameEngine.Board.GetPieceAt(position);
                            <td @onclick="() => SelectSquare(position)"
                                class="@GetSquareClass(position)">
                                @(piece?.Representation ?? "")
                            </td>
                        }
                        <th>@(8 - row)</th>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <th></th>
                    @for (char col = 'a'; col <= 'h'; col++)
                    {
                        <th>@col</th>
                    }
                    <th></th>
                </tr>
            </tfoot>
        </table>
    </div>
    <div class="game-info">
        <h3>Game Info</h3>
        <p>Current Player: @GameEngine.GetCurrentPlayer()</p>
        <p>Check: @(GameEngine.State.IsCheck ? "Yes" : "No")</p>
        <p>Checkmate: @(GameEngine.State.IsCheckmate ? "Yes" : "No")</p>
    </div>
    <div class="move-log">
        <h3>Move Log</h3>
        <ul>
            @foreach (var move in GameEngine.State.MoveLog)
            {
                <li>@move</li>
            }
        </ul>
    </div>
</div>

<p class="error-message">@errorMessage</p>

@code {
    private string? errorMessage;
    private Position? selectedPosition;

    private void SelectSquare(Position position)
    {
        if (selectedPosition == null)
        {
            selectedPosition = position;
        }
        else
        {
            var from = selectedPosition.Value;
            var to = position;

            bool success = GameEngine.ProcessMove(from, to);
            if (!success)
            {
                errorMessage = "Invalid move. Please try again.";
            }
            else
            {
                errorMessage = null;
            }
            selectedPosition = null;
        }
    }

    private string GetSquareClass(Position position)
    {
        var baseClass = (position.Row + position.Col) % 2 == 0 ? "light" : "dark";
        if (selectedPosition == position)
        {
            return $"{baseClass} selected";
        }
        return baseClass;
    }
}


